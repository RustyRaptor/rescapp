-*- Text -*-

This is Rescapp.  Welcome.

This file contains instructions for installing Rescapp.
Rescapp does not need to be compiled.

The Install Requirements
========================

Rescapp depends on some software packages installed into your system. If
you don't have any of them, please obtain and install them before
installing Rescapp.

* GNU Make
* GNU Coreutils


Installing Rescapp
====================

The simplest way to install this package is:

  1. `cd' to the directory containing the package's source code.

  2. Type `make install' to install the programs and any data files and
     documentation.


Installation Names
==================

By default, `make install' will install the package's files in
`/usr/local/bin', `/usr/local/lib', etc.  You can specify an
installation prefix by preceding `make' with environment variable prefix.

E.g.: prefix=/usr make install

DESTDIR environment variable also works as a prefix as Debian (and other
GNU/Linux distributions expect it to work).

E.g.: DESTDIR=/tmp/rescapp-test prefix=/usr make install

Please note, however, that Rescapp knows where it is located in the
filesystem.  If you have installed it in an unusual location, the
system might not work properly, or at all.  The chief utility of these
options for Rescapp is to allow you to "install" in some alternate
location, and then copy these to the actual root filesystem later.

The Runtime Requirements
========================

Rescapp depends on some software packages installed into your system. If
you don't have any of them, please obtain and install them before
using Rescapp.




PYTHON_PACKAGES="python-sip python-qt4"
RAID_PACKAGES="dmraid"
LVM_PACKAGES="lvm2"
GPARTED_PACKAGES="gparted gpart dosfstools"
BOOTREPAIR_PACKAGES="boot-repair \
 boot-sav \
 gawk \
 pastebinit \
 xz-utils \
 gettext-base \
 glade2script \
 os-prober \
 parted \
 xdg-utils \
 zenity \
 boot-sav-extra \
 gksu \
 lsb-release \
 zip \
 dmraid \
 lvm2 \
 mbr \
 mdadm \
 os-uninstaller \
 clean-ubiquity \
 python \
 gir1.2-gtk-3.0 \
 python-gi \
 ntfs-3g \
 efibootmgr \
 syslinux-common \
 cryptsetup \
 boot-info \
 "
TESTDISK_PACKAGES="testdisk \
 e2fslibs \
 libc6 \
 libcomerr2 \
 libjpeg62-turbo \
 libncursesw5 \
 libntfs-3g852 \
 libtinfo5 \
 libuuid1 \
 zlib1g \
 ntfs-3g \
 "
CRYPTSETUP_PACKAGES="cryptsetup \
 libcryptsetup4 \
 cryptsetup-bin \
 "
FILESYSTEM_PACKAGES="reiserfsprogs \
 reiser4progs \
 btrfs-tools \
 xfsprogs \
 xfsdump \
 ntfs-3g \
 "

SELINUX_PACKAGES="\
 libapol4 \
 libqpol1 \
 policycoreutils \
 python-ipy \
 python-selinux \
 python-semanage \
 python-sepolgen \
 python-sepolicy \
 python-setools \
 selinux-utils \
 selinux-basics \
 auditd \
 selinux-policy-default \
 setools \
"

GPT_PACKAGES="\
 gdisk \
"

UEFI_PACKAGES="\
 efibootmgr \
 libefivar1 \
 libefiboot1 \
"

PYTHON_PARTED_PACKAGES="python-parted"
GDDRESCUE_PACKAGES="gddrescue"
MYRESCUE_PACKAGES="myrescue"

CHNTPW_PACKAGES="\
 chntpw \
 samdump2 \
 bkhive \
"

COMMON_PACKAGES=" \
 ${PYTHON_PACKAGES} \
 ${RAID_PACKAGES} \
 ${LVM_PACKAGES} \
 ${GPARTED_PACKAGES} \
 ${BOOTREPAIR_PACKAGES} \
 ${TESTDISK_PACKAGES} \
 ${CRYPTSETUP_PACKAGES} \
 ${FILESYSTEM_PACKAGES} \
 ${SELINUX_PACKAGES} \
 ${GPT_PACKAGES} \
 ${PYTHON_PARTED_PACKAGES} \
 ${UEFI_PACKAGES} \
 ${GDDRESCUE_PACKAGES} \
 ${MYRESCUE_PACKAGES} \
 ${CHNTPW_PACKAGES} \
 zenity \
 iceweasel \
 xchat \
 syslinux \
 pastebinit \
 lilo \
 gawk\
 extundelete\
 " # I add syslinux so that isohybrid command is recognised.
